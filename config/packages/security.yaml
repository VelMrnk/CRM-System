security:
    encoders:
        App\Entity\User\User:
            algorithm: auto
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: username
    role_hierarchy:
        ROLE_ADMIN:     [ROLE_SUPER_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_OWNER:     ROLE_OWNER
        ROLE_EMPLOYEE:  ROLE_EMPLOYEE
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous:  lazy
            switch_user: ~
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout

    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/media, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/master, roles: ROLE_ADMIN, requires_channel: '%env(HTTP_PROTOCOL)%' }
        - { path: ^/owner, roles: ROLE_OWNER, requires_channel: '%env(HTTP_PROTOCOL)%' }
        - { path: ^/employee, roles: ROLE_EMPLOYEE, requires_channel: '%env(HTTP_PROTOCOL)%' }
        - { path: ^/module,
            allow_if: "is_granted('ROLE_OWNER') or is_granted('ROLE_EMPLOYEE')",
            requires_channel: '%env(HTTP_PROTOCOL)%' }
